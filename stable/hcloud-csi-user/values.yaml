---
# -- (string) Override the name
nameOverride: ""

# -- (string) Override the fullname
fullnameOverride: ""

# -- Security context for the daemonset
securityContext:
  fsGroup: 1001

podSecurityContext:
  # -- Security context for the registrar pod
  registrar: {}

  # -- Security context for the liveness-probe pod
  liveness: {}

  # -- Security context for the driver pod
  driver:
    privileged: true

image:
  # -- Optional name of pull secret if using a private registry
  pullSecrets: []

  registrar:
    # -- Image repository used by daemonset
    repository: registry.k8s.io/sig-storage/csi-node-driver-registrar

    # -- (string) Optional tag for the repository
    tag: v2.14.0 # updater: name=registrar image=registry.k8s.io/sig-storage/csi-node-driver-registrar

    # -- Image pull policy
    pullPolicy: IfNotPresent

  liveness:
    # -- Image repository used by daemonset
    repository: registry.k8s.io/sig-storage/livenessprobe

    # -- (string) Optional tag for the repository
    tag: v2.16.0 # updater: name=liveness image=registry.k8s.io/sig-storage/livenessprobe

    # -- Image pull policy
    pullPolicy: IfNotPresent

  driver:
    # -- Image repository used by daemonset
    repository: hetznercloud/hcloud-csi-driver

    # -- (string) Optional tag for the repository, defaults to app version
    tag: ""

    # -- Image pull policy
    pullPolicy: IfNotPresent

resources:
  # -- Resources for the registrar pod
  registrar:
    limits: {}
    requests: {}

  # -- Resources for the liveness-probe pod
  liveness:
    limits: {}
    requests: {}

  # -- Resources for the driver pod
  driver:
    limits: {}
    requests:
      cpu: 100m
      memory: 64Mi

serviceAccount:
  # -- Create a new service account
  create: true

  # -- (string) Optional name for an existing service account
  name: ""

  # -- Define annotations for the service account
  annotations: {}

# -- Updaqte strategy for daemonset
updateStrategy:
  type: RollingUpdate

# -- Priority class name for daemonset
priorityClassName: system-cluster-critical

# -- Define additional labels
labels: {}

# -- Define additional annotations
annotations: {}

# -- List of extra init containers
extraInitContainers: []

# -- List of extra sidecar containers
extraSidecarContainers: []

# -- List of extra volumes
extraVolumes: []

# -- List of extra volume mounts
extraVolumeMounts: []
  # - name: extra
  #   mountPath: /usr/local/share
  #   readOnly: true

service:
  # -- Type of the service
  type: ClusterIP

  # -- Additional annotations for the service
  annotations: {}

  # -- Additional labels for the service
  labels: {}

metrics:
  # -- Enable metrics
  enabled: true

  # -- (int) Metrics port of the service
  port: 9189

  # -- (int) Internal metrics port of the service
  internalPort: 9189

  serviceMonitor:
    # -- Enable service monitor
    enabled: false

    # -- (string) Namespace for ServiceMonitor, defaults to release namespace
    namespace:

    # -- (string) Optional job label for the target service in Prometheus
    jobLabel:

    # -- (string) Interval at which metrics should be scraped
    interval:

    # -- (string) Timeout after which the scrape is ended
    scrapeTimeout:

    # -- HonorLabels chooses the metricâ€™s labels on collisions with target labels
    honorLabels: false

    # -- List of metric relabel configs to apply to samples before ingestion
    metricRelabelings: []

    # -- List of relabel configs to apply to samples before scraping
    relabelings: []

    # -- Additional annotations for the service monitor
    annotations: {}

    # -- Additional labels for the service monitor
    labels: {}

# -- Node selector for the daemonset
nodeSelector: {}

# -- Affinity for the daemonset
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: instance.hetzner.cloud/is-root-server
              operator: NotIn
              values:
                - "true"
            - key: instance.hetzner.cloud/provided-by
              operator: NotIn
              values:
                - "robot"

# -- Tolerations for the daemonset
tolerations:
  - effect: NoExecute
    operator: Exists
  - effect: NoSchedule
    operator: Exists
  - key: CriticalAddonsOnly
    operator: Exists

# -- Extra environment variables for driver
extraEnvVariables: []

config:
  # -- Enable topology setting
  enableTopology: true

...
